{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["In this part we take an activity recognition dataset- data  and perform human activity recognition. The dataset was created by recording 30 participants performing activities of daily living (ADL) while wearing a waist-mounted smartphone with embedded inertial sensors. The objective is to classify activities into one of the six activities performed namely WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING. The dataset consists of more than 7000 datapoints.\n","\n","\n","\n","This task can be viewed as a tabular classification task where we can leverage the tubular techniques like decision models. First, we begin by loading and understanding the distribution of the data.\n","\n","\n","\n","After this we use the labelencoder to convert the string labels into integer classes so that it can be fed into the models for training. Then we move onto to use Principal Component Analysis(PCA). This is because the original data has too many features which can hamper the model training. So, by using PCA we project the higher dimension data into lower dimension so as to decrease the number of features. Finally we use the the Random Forest classifier, a tree based algorithm from sklearn to make the predictions.\n"],"metadata":{"id":"kfOQ-QzzuMjQ"}},{"cell_type":"code","source":["!pip install -q kaggle"],"metadata":{"id":"PylDjjtwf99c","executionInfo":{"status":"ok","timestamp":1716086668079,"user_tz":-540,"elapsed":7173,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["! mkdir ~/.kaggle\n","\n","! cp kaggle.json ~/.kaggle/\n","! chmod 600 ~/.kaggle/kaggle.json"],"metadata":{"id":"3PAs_Wg1gADD","executionInfo":{"status":"ok","timestamp":1716086668473,"user_tz":-540,"elapsed":398,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["!kaggle datasets download -d uciml/human-activity-recognition-with-smartphones"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ur_vYqTR0XXF","outputId":"037b193a-0378-4457-d94c-b5e2e56cfe9e","executionInfo":{"status":"ok","timestamp":1716086670468,"user_tz":-540,"elapsed":1999,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Warning: Looks like you're using an outdated API Version, please consider updating (server 1.6.14 / client 1.6.12)\n","Dataset URL: https://www.kaggle.com/datasets/uciml/human-activity-recognition-with-smartphones\n","License(s): CC0-1.0\n","Downloading human-activity-recognition-with-smartphones.zip to /content\n"," 37% 9.00M/24.5M [00:00<00:00, 29.7MB/s]\n","100% 24.5M/24.5M [00:00<00:00, 67.3MB/s]\n"]}]},{"cell_type":"code","source":["!unzip /content/human-activity-recognition-with-smartphones.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"71FmhMwm0Z5f","outputId":"4ff2da5f-9cbe-4689-8364-06f2d81c392c","executionInfo":{"status":"ok","timestamp":1716086671379,"user_tz":-540,"elapsed":915,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  /content/human-activity-recognition-with-smartphones.zip\n","  inflating: test.csv                \n","  inflating: train.csv               \n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('train.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"5cnNhNA80did","outputId":"ca15a448-e6e6-414e-ab11-a37e4557df0f","executionInfo":{"status":"ok","timestamp":1716086673009,"user_tz":-540,"elapsed":1634,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   tBodyAcc-mean()-X  tBodyAcc-mean()-Y  tBodyAcc-mean()-Z  tBodyAcc-std()-X  \\\n","0           0.288585          -0.020294          -0.132905         -0.995279   \n","1           0.278419          -0.016411          -0.123520         -0.998245   \n","2           0.279653          -0.019467          -0.113462         -0.995380   \n","3           0.279174          -0.026201          -0.123283         -0.996091   \n","4           0.276629          -0.016570          -0.115362         -0.998139   \n","\n","   tBodyAcc-std()-Y  tBodyAcc-std()-Z  tBodyAcc-mad()-X  tBodyAcc-mad()-Y  \\\n","0         -0.983111         -0.913526         -0.995112         -0.983185   \n","1         -0.975300         -0.960322         -0.998807         -0.974914   \n","2         -0.967187         -0.978944         -0.996520         -0.963668   \n","3         -0.983403         -0.990675         -0.997099         -0.982750   \n","4         -0.980817         -0.990482         -0.998321         -0.979672   \n","\n","   tBodyAcc-mad()-Z  tBodyAcc-max()-X  ...  fBodyBodyGyroJerkMag-kurtosis()  \\\n","0         -0.923527         -0.934724  ...                        -0.710304   \n","1         -0.957686         -0.943068  ...                        -0.861499   \n","2         -0.977469         -0.938692  ...                        -0.760104   \n","3         -0.989302         -0.938692  ...                        -0.482845   \n","4         -0.990441         -0.942469  ...                        -0.699205   \n","\n","   angle(tBodyAccMean,gravity)  angle(tBodyAccJerkMean),gravityMean)  \\\n","0                    -0.112754                              0.030400   \n","1                     0.053477                             -0.007435   \n","2                    -0.118559                              0.177899   \n","3                    -0.036788                             -0.012892   \n","4                     0.123320                              0.122542   \n","\n","   angle(tBodyGyroMean,gravityMean)  angle(tBodyGyroJerkMean,gravityMean)  \\\n","0                         -0.464761                             -0.018446   \n","1                         -0.732626                              0.703511   \n","2                          0.100699                              0.808529   \n","3                          0.640011                             -0.485366   \n","4                          0.693578                             -0.615971   \n","\n","   angle(X,gravityMean)  angle(Y,gravityMean)  angle(Z,gravityMean)  subject  \\\n","0             -0.841247              0.179941             -0.058627        1   \n","1             -0.844788              0.180289             -0.054317        1   \n","2             -0.848933              0.180637             -0.049118        1   \n","3             -0.848649              0.181935             -0.047663        1   \n","4             -0.847865              0.185151             -0.043892        1   \n","\n","   Activity  \n","0  STANDING  \n","1  STANDING  \n","2  STANDING  \n","3  STANDING  \n","4  STANDING  \n","\n","[5 rows x 563 columns]"],"text/html":["\n","  <div id=\"df-ef2a8e87-3f98-4909-8608-a6c1186ef24b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tBodyAcc-mean()-X</th>\n","      <th>tBodyAcc-mean()-Y</th>\n","      <th>tBodyAcc-mean()-Z</th>\n","      <th>tBodyAcc-std()-X</th>\n","      <th>tBodyAcc-std()-Y</th>\n","      <th>tBodyAcc-std()-Z</th>\n","      <th>tBodyAcc-mad()-X</th>\n","      <th>tBodyAcc-mad()-Y</th>\n","      <th>tBodyAcc-mad()-Z</th>\n","      <th>tBodyAcc-max()-X</th>\n","      <th>...</th>\n","      <th>fBodyBodyGyroJerkMag-kurtosis()</th>\n","      <th>angle(tBodyAccMean,gravity)</th>\n","      <th>angle(tBodyAccJerkMean),gravityMean)</th>\n","      <th>angle(tBodyGyroMean,gravityMean)</th>\n","      <th>angle(tBodyGyroJerkMean,gravityMean)</th>\n","      <th>angle(X,gravityMean)</th>\n","      <th>angle(Y,gravityMean)</th>\n","      <th>angle(Z,gravityMean)</th>\n","      <th>subject</th>\n","      <th>Activity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.288585</td>\n","      <td>-0.020294</td>\n","      <td>-0.132905</td>\n","      <td>-0.995279</td>\n","      <td>-0.983111</td>\n","      <td>-0.913526</td>\n","      <td>-0.995112</td>\n","      <td>-0.983185</td>\n","      <td>-0.923527</td>\n","      <td>-0.934724</td>\n","      <td>...</td>\n","      <td>-0.710304</td>\n","      <td>-0.112754</td>\n","      <td>0.030400</td>\n","      <td>-0.464761</td>\n","      <td>-0.018446</td>\n","      <td>-0.841247</td>\n","      <td>0.179941</td>\n","      <td>-0.058627</td>\n","      <td>1</td>\n","      <td>STANDING</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.278419</td>\n","      <td>-0.016411</td>\n","      <td>-0.123520</td>\n","      <td>-0.998245</td>\n","      <td>-0.975300</td>\n","      <td>-0.960322</td>\n","      <td>-0.998807</td>\n","      <td>-0.974914</td>\n","      <td>-0.957686</td>\n","      <td>-0.943068</td>\n","      <td>...</td>\n","      <td>-0.861499</td>\n","      <td>0.053477</td>\n","      <td>-0.007435</td>\n","      <td>-0.732626</td>\n","      <td>0.703511</td>\n","      <td>-0.844788</td>\n","      <td>0.180289</td>\n","      <td>-0.054317</td>\n","      <td>1</td>\n","      <td>STANDING</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.279653</td>\n","      <td>-0.019467</td>\n","      <td>-0.113462</td>\n","      <td>-0.995380</td>\n","      <td>-0.967187</td>\n","      <td>-0.978944</td>\n","      <td>-0.996520</td>\n","      <td>-0.963668</td>\n","      <td>-0.977469</td>\n","      <td>-0.938692</td>\n","      <td>...</td>\n","      <td>-0.760104</td>\n","      <td>-0.118559</td>\n","      <td>0.177899</td>\n","      <td>0.100699</td>\n","      <td>0.808529</td>\n","      <td>-0.848933</td>\n","      <td>0.180637</td>\n","      <td>-0.049118</td>\n","      <td>1</td>\n","      <td>STANDING</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.279174</td>\n","      <td>-0.026201</td>\n","      <td>-0.123283</td>\n","      <td>-0.996091</td>\n","      <td>-0.983403</td>\n","      <td>-0.990675</td>\n","      <td>-0.997099</td>\n","      <td>-0.982750</td>\n","      <td>-0.989302</td>\n","      <td>-0.938692</td>\n","      <td>...</td>\n","      <td>-0.482845</td>\n","      <td>-0.036788</td>\n","      <td>-0.012892</td>\n","      <td>0.640011</td>\n","      <td>-0.485366</td>\n","      <td>-0.848649</td>\n","      <td>0.181935</td>\n","      <td>-0.047663</td>\n","      <td>1</td>\n","      <td>STANDING</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.276629</td>\n","      <td>-0.016570</td>\n","      <td>-0.115362</td>\n","      <td>-0.998139</td>\n","      <td>-0.980817</td>\n","      <td>-0.990482</td>\n","      <td>-0.998321</td>\n","      <td>-0.979672</td>\n","      <td>-0.990441</td>\n","      <td>-0.942469</td>\n","      <td>...</td>\n","      <td>-0.699205</td>\n","      <td>0.123320</td>\n","      <td>0.122542</td>\n","      <td>0.693578</td>\n","      <td>-0.615971</td>\n","      <td>-0.847865</td>\n","      <td>0.185151</td>\n","      <td>-0.043892</td>\n","      <td>1</td>\n","      <td>STANDING</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 563 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef2a8e87-3f98-4909-8608-a6c1186ef24b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef2a8e87-3f98-4909-8608-a6c1186ef24b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef2a8e87-3f98-4909-8608-a6c1186ef24b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-60366247-9dcf-4297-acc0-486a1b09f8ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60366247-9dcf-4297-acc0-486a1b09f8ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-60366247-9dcf-4297-acc0-486a1b09f8ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.Activity.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kuRi0Yeo0kgF","outputId":"d51ec2f1-1db1-4498-d24a-9bd35346c875","executionInfo":{"status":"ok","timestamp":1716086673009,"user_tz":-540,"elapsed":12,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Activity\n","LAYING                1407\n","STANDING              1374\n","SITTING               1286\n","WALKING               1226\n","WALKING_UPSTAIRS      1073\n","WALKING_DOWNSTAIRS     986\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ov_e4Ed70qrj","outputId":"3613a00b-cc72-4c7f-d3d6-64c9115dc8e6","executionInfo":{"status":"ok","timestamp":1716086673009,"user_tz":-540,"elapsed":10,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7352, 563)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"7kiw5DT408nW","outputId":"fbf2f128-c5e1-42b5-ee92-beaa970d4d73","executionInfo":{"status":"ok","timestamp":1716086674262,"user_tz":-540,"elapsed":1262,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       tBodyAcc-mean()-X  tBodyAcc-mean()-Y  tBodyAcc-mean()-Z  \\\n","count        7352.000000        7352.000000        7352.000000   \n","mean            0.274488          -0.017695          -0.109141   \n","std             0.070261           0.040811           0.056635   \n","min            -1.000000          -1.000000          -1.000000   \n","25%             0.262975          -0.024863          -0.120993   \n","50%             0.277193          -0.017219          -0.108676   \n","75%             0.288461          -0.010783          -0.097794   \n","max             1.000000           1.000000           1.000000   \n","\n","       tBodyAcc-std()-X  tBodyAcc-std()-Y  tBodyAcc-std()-Z  tBodyAcc-mad()-X  \\\n","count       7352.000000       7352.000000       7352.000000       7352.000000   \n","mean          -0.605438         -0.510938         -0.604754         -0.630512   \n","std            0.448734          0.502645          0.418687          0.424073   \n","min           -1.000000         -0.999873         -1.000000         -1.000000   \n","25%           -0.992754         -0.978129         -0.980233         -0.993591   \n","50%           -0.946196         -0.851897         -0.859365         -0.950709   \n","75%           -0.242813         -0.034231         -0.262415         -0.292680   \n","max            1.000000          0.916238          1.000000          1.000000   \n","\n","       tBodyAcc-mad()-Y  tBodyAcc-mad()-Z  tBodyAcc-max()-X  ...  \\\n","count       7352.000000       7352.000000       7352.000000  ...   \n","mean          -0.526907         -0.606150         -0.468604  ...   \n","std            0.485942          0.414122          0.544547  ...   \n","min           -1.000000         -1.000000         -1.000000  ...   \n","25%           -0.978162         -0.980251         -0.936219  ...   \n","50%           -0.857328         -0.857143         -0.881637  ...   \n","75%           -0.066701         -0.265671         -0.017129  ...   \n","max            0.967664          1.000000          1.000000  ...   \n","\n","       fBodyBodyGyroJerkMag-skewness()  fBodyBodyGyroJerkMag-kurtosis()  \\\n","count                      7352.000000                      7352.000000   \n","mean                         -0.307009                        -0.625294   \n","std                           0.321011                         0.307584   \n","min                          -0.995357                        -0.999765   \n","25%                          -0.542602                        -0.845573   \n","50%                          -0.343685                        -0.711692   \n","75%                          -0.126979                        -0.503878   \n","max                           0.989538                         0.956845   \n","\n","       angle(tBodyAccMean,gravity)  angle(tBodyAccJerkMean),gravityMean)  \\\n","count                  7352.000000                           7352.000000   \n","mean                      0.008684                              0.002186   \n","std                       0.336787                              0.448306   \n","min                      -0.976580                             -1.000000   \n","25%                      -0.121527                             -0.289549   \n","50%                       0.009509                              0.008943   \n","75%                       0.150865                              0.292861   \n","max                       1.000000                              1.000000   \n","\n","       angle(tBodyGyroMean,gravityMean)  angle(tBodyGyroJerkMean,gravityMean)  \\\n","count                       7352.000000                           7352.000000   \n","mean                           0.008726                             -0.005981   \n","std                            0.608303                              0.477975   \n","min                           -1.000000                             -1.000000   \n","25%                           -0.482273                             -0.376341   \n","50%                            0.008735                             -0.000368   \n","75%                            0.506187                              0.359368   \n","max                            0.998702                              0.996078   \n","\n","       angle(X,gravityMean)  angle(Y,gravityMean)  angle(Z,gravityMean)  \\\n","count           7352.000000           7352.000000           7352.000000   \n","mean              -0.489547              0.058593             -0.056515   \n","std                0.511807              0.297480              0.279122   \n","min               -1.000000             -1.000000             -1.000000   \n","25%               -0.812065             -0.017885             -0.143414   \n","50%               -0.709417              0.182071              0.003181   \n","75%               -0.509079              0.248353              0.107659   \n","max                1.000000              0.478157              1.000000   \n","\n","           subject  \n","count  7352.000000  \n","mean     17.413085  \n","std       8.975143  \n","min       1.000000  \n","25%       8.000000  \n","50%      19.000000  \n","75%      26.000000  \n","max      30.000000  \n","\n","[8 rows x 562 columns]"],"text/html":["\n","  <div id=\"df-204069b0-d8b6-44b8-8a3f-2a6a15c010ca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tBodyAcc-mean()-X</th>\n","      <th>tBodyAcc-mean()-Y</th>\n","      <th>tBodyAcc-mean()-Z</th>\n","      <th>tBodyAcc-std()-X</th>\n","      <th>tBodyAcc-std()-Y</th>\n","      <th>tBodyAcc-std()-Z</th>\n","      <th>tBodyAcc-mad()-X</th>\n","      <th>tBodyAcc-mad()-Y</th>\n","      <th>tBodyAcc-mad()-Z</th>\n","      <th>tBodyAcc-max()-X</th>\n","      <th>...</th>\n","      <th>fBodyBodyGyroJerkMag-skewness()</th>\n","      <th>fBodyBodyGyroJerkMag-kurtosis()</th>\n","      <th>angle(tBodyAccMean,gravity)</th>\n","      <th>angle(tBodyAccJerkMean),gravityMean)</th>\n","      <th>angle(tBodyGyroMean,gravityMean)</th>\n","      <th>angle(tBodyGyroJerkMean,gravityMean)</th>\n","      <th>angle(X,gravityMean)</th>\n","      <th>angle(Y,gravityMean)</th>\n","      <th>angle(Z,gravityMean)</th>\n","      <th>subject</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>...</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","      <td>7352.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.274488</td>\n","      <td>-0.017695</td>\n","      <td>-0.109141</td>\n","      <td>-0.605438</td>\n","      <td>-0.510938</td>\n","      <td>-0.604754</td>\n","      <td>-0.630512</td>\n","      <td>-0.526907</td>\n","      <td>-0.606150</td>\n","      <td>-0.468604</td>\n","      <td>...</td>\n","      <td>-0.307009</td>\n","      <td>-0.625294</td>\n","      <td>0.008684</td>\n","      <td>0.002186</td>\n","      <td>0.008726</td>\n","      <td>-0.005981</td>\n","      <td>-0.489547</td>\n","      <td>0.058593</td>\n","      <td>-0.056515</td>\n","      <td>17.413085</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.070261</td>\n","      <td>0.040811</td>\n","      <td>0.056635</td>\n","      <td>0.448734</td>\n","      <td>0.502645</td>\n","      <td>0.418687</td>\n","      <td>0.424073</td>\n","      <td>0.485942</td>\n","      <td>0.414122</td>\n","      <td>0.544547</td>\n","      <td>...</td>\n","      <td>0.321011</td>\n","      <td>0.307584</td>\n","      <td>0.336787</td>\n","      <td>0.448306</td>\n","      <td>0.608303</td>\n","      <td>0.477975</td>\n","      <td>0.511807</td>\n","      <td>0.297480</td>\n","      <td>0.279122</td>\n","      <td>8.975143</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-0.999873</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>...</td>\n","      <td>-0.995357</td>\n","      <td>-0.999765</td>\n","      <td>-0.976580</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.262975</td>\n","      <td>-0.024863</td>\n","      <td>-0.120993</td>\n","      <td>-0.992754</td>\n","      <td>-0.978129</td>\n","      <td>-0.980233</td>\n","      <td>-0.993591</td>\n","      <td>-0.978162</td>\n","      <td>-0.980251</td>\n","      <td>-0.936219</td>\n","      <td>...</td>\n","      <td>-0.542602</td>\n","      <td>-0.845573</td>\n","      <td>-0.121527</td>\n","      <td>-0.289549</td>\n","      <td>-0.482273</td>\n","      <td>-0.376341</td>\n","      <td>-0.812065</td>\n","      <td>-0.017885</td>\n","      <td>-0.143414</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.277193</td>\n","      <td>-0.017219</td>\n","      <td>-0.108676</td>\n","      <td>-0.946196</td>\n","      <td>-0.851897</td>\n","      <td>-0.859365</td>\n","      <td>-0.950709</td>\n","      <td>-0.857328</td>\n","      <td>-0.857143</td>\n","      <td>-0.881637</td>\n","      <td>...</td>\n","      <td>-0.343685</td>\n","      <td>-0.711692</td>\n","      <td>0.009509</td>\n","      <td>0.008943</td>\n","      <td>0.008735</td>\n","      <td>-0.000368</td>\n","      <td>-0.709417</td>\n","      <td>0.182071</td>\n","      <td>0.003181</td>\n","      <td>19.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.288461</td>\n","      <td>-0.010783</td>\n","      <td>-0.097794</td>\n","      <td>-0.242813</td>\n","      <td>-0.034231</td>\n","      <td>-0.262415</td>\n","      <td>-0.292680</td>\n","      <td>-0.066701</td>\n","      <td>-0.265671</td>\n","      <td>-0.017129</td>\n","      <td>...</td>\n","      <td>-0.126979</td>\n","      <td>-0.503878</td>\n","      <td>0.150865</td>\n","      <td>0.292861</td>\n","      <td>0.506187</td>\n","      <td>0.359368</td>\n","      <td>-0.509079</td>\n","      <td>0.248353</td>\n","      <td>0.107659</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.916238</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.967664</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>0.989538</td>\n","      <td>0.956845</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.998702</td>\n","      <td>0.996078</td>\n","      <td>1.000000</td>\n","      <td>0.478157</td>\n","      <td>1.000000</td>\n","      <td>30.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 562 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-204069b0-d8b6-44b8-8a3f-2a6a15c010ca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-204069b0-d8b6-44b8-8a3f-2a6a15c010ca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-204069b0-d8b6-44b8-8a3f-2a6a15c010ca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e3b81985-3475-417f-b6af-9c8cd5ad7144\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3b81985-3475-417f-b6af-9c8cd5ad7144')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e3b81985-3475-417f-b6af-9c8cd5ad7144 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sD74WltE0_U4","outputId":"94b76a2e-a5c5-4258-aa43-d926402cfadf","executionInfo":{"status":"ok","timestamp":1716086674262,"user_tz":-540,"elapsed":8,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7352 entries, 0 to 7351\n","Columns: 563 entries, tBodyAcc-mean()-X to Activity\n","dtypes: float64(561), int64(1), object(1)\n","memory usage: 31.6+ MB\n"]}]},{"cell_type":"code","source":["X_train = df.iloc[:,0:len(df.columns)-1]\n","Y_train = df.iloc[:,-1]"],"metadata":{"id":"Wy_b8aL40_8E","executionInfo":{"status":"ok","timestamp":1716086674262,"user_tz":-540,"elapsed":5,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import OneHotEncoder, LabelEncoder\n","le = LabelEncoder()\n","Y_train = le.fit_transform(Y_train)"],"metadata":{"id":"cBVdcorn1Q9T","executionInfo":{"status":"ok","timestamp":1716086681867,"user_tz":-540,"elapsed":2594,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["le_name_mapping = dict(zip(le.classes_, le.transform(le.classes_)))\n","print(le_name_mapping)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u3J2Rzgi1a5S","outputId":"20b5e4af-af0b-414c-ce0c-b519e23ff50b","executionInfo":{"status":"ok","timestamp":1716086681868,"user_tz":-540,"elapsed":4,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["{'LAYING': 0, 'SITTING': 1, 'STANDING': 2, 'WALKING': 3, 'WALKING_DOWNSTAIRS': 4, 'WALKING_UPSTAIRS': 5}\n"]}]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","\n","pca = PCA(0.95)\n","\n","pca.fit(X_train)\n","\n","train_x_pca = pca.transform(X_train)\n","\n","print(pca.n_components_)\n","print(pca.explained_variance_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mm1wFV2_1fOr","outputId":"2b562725-6d24-4b41-8201-036ff6fcce80","executionInfo":{"status":"ok","timestamp":1716086686854,"user_tz":-540,"elapsed":2804,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["27\n","[81.16291788 34.28596447  2.72791827  2.29294473  1.04143062  0.94302608\n","  0.70697697  0.65385319  0.59223677  0.53651932  0.47765039  0.42035141\n","  0.37433617  0.32242293  0.30120497  0.27337432  0.26242838  0.25955521\n","  0.23984823  0.23465595  0.22832294  0.21824571  0.20678987  0.19576309\n","  0.18881297  0.1813889   0.1766936 ]\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","clf = RandomForestClassifier()\n","clf.fit(train_x_pca, Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"3gUWn2aI1kQP","outputId":"35c9247b-61fd-45ca-d3e1-2769d3184e94","executionInfo":{"status":"ok","timestamp":1716086694453,"user_tz":-540,"elapsed":4949,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["clf.score(train_x_pca,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9vsZKuAK130h","outputId":"27402abb-b23a-45b2-9855-3b61e4eeb8d4","executionInfo":{"status":"ok","timestamp":1716086695751,"user_tz":-540,"elapsed":364,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingClassifier\n","clf = GradientBoostingClassifier()\n","clf.fit(train_x_pca, Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"outputId":"0f710688-69ac-4bcc-fe56-e1536ae62c8b","id":"PCUDsqwn2KEP","executionInfo":{"status":"ok","timestamp":1716086777152,"user_tz":-540,"elapsed":81401,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GradientBoostingClassifier()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingClassifier</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["clf.score(train_x_pca,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f83d45f5-761a-4c6e-ed9c-f74adfca9f24","id":"7RQNCunI2KEP","executionInfo":{"status":"ok","timestamp":1716086777152,"user_tz":-540,"elapsed":5,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}}},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9794613710554951"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["print(train_x_pca[0])\n","print('Prediction: ', clf.predict(train_x_pca[0].reshape(1,-1)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zfRaiviAvOb9","executionInfo":{"status":"ok","timestamp":1716086790355,"user_tz":-540,"elapsed":5,"user":{"displayName":"Usha Rengaraju","userId":"02972928350054045429"}},"outputId":"e54f07e6-d140-4eb5-a47d-a2da9f460849"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[15.7272239  -7.24625881 -0.46558936 -1.45368068  1.41995403  1.48815208\n"," -0.30634986  0.45740915  0.52319453 -1.13872652 -0.3621355   0.01698166\n","  0.05863601  0.87477373  1.47823156  1.22539863  0.34717092 -0.07968707\n"," -0.50421908 -0.7096581   0.45056054 -0.12789526 -0.2011846  -0.21848\n"," -0.36474246 -0.57101935 -0.0897792 ]\n","Prediction:  [2]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"SCM3A2I6vV11"},"execution_count":null,"outputs":[]}]}